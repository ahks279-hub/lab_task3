#include <stdio.h>

int main() {
    int initial_balance = 1000;
    int balance = initial_balance;
    
    // Array of transactions (positive for deposit, negative for withdrawal)
    int transactions[] = {200, -150, -500, -400, -50, -200, 300};
    int total_transactions = 7;
    
    // Array to store unprocessed transactions
    int tobeprocessed[100];
    int tbp_index = 0;  // Index for tobeprocessed array
    
    // Process each transaction
    for (int i = 0; i < total_transactions; i++) {
        int transaction = transactions[i];
        
        // If withdrawal exceeds current balance, skip this transaction
        if (transaction < 0 && (-transaction > balance)) {
            printf("Transaction %d is invalid due to insufficient funds.\n", transaction);
            tobeprocessed[tbp_index++] = transaction;  // Store in tobeprocessed array
            continue;  // Skip the rest of the loop and process next transaction
        }
        
        // Update balance for valid transactions
        balance += transaction;
        
        // If balance reaches 0, stop processing further transactions
        if (balance == 0) {
            printf("Balance reached 0. No further transactions will be processed.\n");
            tobeprocessed[tbp_index++] = transaction;  // Store unprocessed transaction
            break;  // Exit the loop
        }
    }
    
    // Print final balance
    printf("\nFinal Balance: %d AED\n", balance);
    
    // Print unprocessed transactions
    printf("\nUnprocessed transactions:\n");
    for (int i = 0; i < tbp_index; i++) {
        printf("%d ", tobeprocessed[i]);
    }
    printf("\n");
    
    return 0;
}

